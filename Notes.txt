1. print(r '\n') where r mean raw string
2. _ (underscore represents) result of last equation.
3. name[-1] last digit of array 
4. name[-2] last but digit of array
5. name[0:2] if name = ajit it will print 'aj'
6. name[0:3] if name = ajit it will print 'aji'
7. len(name) it will print 4(length of the ajit)
8. if a = ajit   a[1:3] - when you print this it will give "ji" not "jit" because indexing excludes the last letter


What are Tuples in Python
- Tuples re immutable
- Methods used with tuples
- When to use tuples over lists?
- What are Sets in Python?
- Properties of Sets

#1
Tuples:-
Tuple is almost similar to a list in which we can store multiple values.
- Tuples are Immutable and we cannot change values in them.
- To define a tuple, () round brackets are used.
- We can fetch the values from a tuple using the index value that can be given in a square bracket.
- Tuple will give an error when you tried to change a value in it.

#2
- count method is used to count the occurrences of an element in a tuple. It counts the number of times that an element is present in a tuple.
e.g., If an element of value 5 is present two times in a tuple, then the count method returns 2.

#3
 - We can use tuples when we want a list of multiple values but we do not want to change it.
- Iteration in the tuple is faster than the list.

#4
Sets:-
- Set is a collection of unique elements.
- To define the set, we use the {} curly brackets.
- Set never follows the sequence.
- When we print the set, then the sequence of values in output will be different from the sequence of input.
- Duplicate values present in a set will be printed only once in an output.
- Set uses the concept of Hash. Hash is used to improve the performance as it fetches the values as fast as possible.
- Indexing is not supported in sets as it does not follow sequencing.
- Values can not be changed in a set also because index value is not supported.

#5
Data Types:-
- None
- Numeric [int, float, complex, bool ]
- Sequence [Lists, Tuple, Set, String, Range]
- Dictionary

#6
Operators:-
Arithmetic
Assignment
Relational
Logical 
Unary